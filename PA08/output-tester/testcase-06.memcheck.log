==29932== Memcheck, a memory error detector
==29932== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==29932== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==29932== Command: ./a.out 5
==29932== Parent PID: 29931
==29932== 
--29932-- 
--29932-- Valgrind options:
--29932--    --tool=memcheck
--29932--    --leak-check=full
--29932--    --verbose
--29932--    --log-file=memcheck.log
--29932-- Contents of /proc/version:
--29932--   Linux version 2.6.32-431.23.3.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Wed Jul 16 06:12:23 EDT 2014
--29932-- Arch and hwcaps: AMD64, amd64-sse3-cx16-avx
--29932-- Page sizes: currently 4096, max supported 4096
--29932-- Valgrind library directory: /usr/lib64/valgrind
--29932-- Reading syms from /tmp/.O1Bq73/a.out
--29932-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--29932--    object doesn't have a dynamic symbol table
--29932-- Reading syms from /lib64/ld-2.12.so
--29932--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--29932--   .. build-id is valid
--29932-- Scheduler: using generic scheduler lock implementation.
--29932-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==29932== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-29932-by-patel344-on-ecegrid-thin5.ecn.purdue.edu
==29932== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-29932-by-patel344-on-ecegrid-thin5.ecn.purdue.edu
==29932== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-29932-by-patel344-on-ecegrid-thin5.ecn.purdue.edu
==29932== 
==29932== TO CONTROL THIS PROCESS USING vgdb (which you probably
==29932== don't want to do, unless you know exactly what you're doing,
==29932== or are doing some strange experiment):
==29932==   /usr/lib64/valgrind/../../bin/vgdb --pid=29932 ...command...
==29932== 
==29932== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==29932==   /path/to/gdb ./a.out
==29932== and then give GDB the following command
==29932==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=29932
==29932== --pid is optional if only one valgrind process is running
==29932== 
--29932-- REDIR: 0x398ac17610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--29932-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--29932-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--29932-- REDIR: 0x398ac17480 (index) redirected to 0x4a07c30 (index)
--29932-- REDIR: 0x398ac17500 (strcmp) redirected to 0x4a08570 (strcmp)
--29932-- Reading syms from /lib64/libc-2.12.so
--29932--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--29932--   .. build-id is valid
--29932-- REDIR: 0x398b084cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29932-- REDIR: 0x398b086f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29932-- REDIR: 0x398b082c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--29932-- REDIR: 0x398b07a640 (malloc) redirected to 0x4a069ac (malloc)
--29932-- REDIR: 0x398b081160 (__GI_strlen) redirected to 0x4a07fb0 (__GI_strlen)
--29932-- REDIR: 0x398b089670 (memcpy) redirected to 0x4a08b60 (memcpy)
--29932-- REDIR: 0x398b08aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--29932-- REDIR: 0x398b084500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--29932-- REDIR: 0x398b07b520 (free) redirected to 0x4a063a9 (free)
==29932== 
==29932== HEAP SUMMARY:
==29932==     in use at exit: 28 bytes in 6 blocks
==29932==   total heap usage: 12 allocs, 6 frees, 124 bytes allocated
==29932== 
==29932== Searching for pointers to 6 not-freed blocks
==29932== Checked 64,712 bytes
==29932== 
==29932== 4 bytes in 1 blocks are definitely lost in loss record 1 of 2
==29932==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==29932==    by 0x398B080E91: strdup (strdup.c:43)
==29932==    by 0x4009ED: List_createNode_sol (<stdin>:20)
==29932==    by 0x4012F7: tests_List_destroyNode (test_List_destroyNode.c:33)
==29932==    by 0x402049: main (<stdin>:159)
==29932== 
==29932== 24 bytes in 5 blocks are definitely lost in loss record 2 of 2
==29932==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==29932==    by 0x398B080E91: strdup (strdup.c:43)
==29932==    by 0x4009ED: List_createNode_sol (<stdin>:20)
==29932==    by 0x40131D: tests_List_destroyNode (test_List_destroyNode.c:36)
==29932==    by 0x402049: main (<stdin>:159)
==29932== 
==29932== LEAK SUMMARY:
==29932==    definitely lost: 28 bytes in 6 blocks
==29932==    indirectly lost: 0 bytes in 0 blocks
==29932==      possibly lost: 0 bytes in 0 blocks
==29932==    still reachable: 0 bytes in 0 blocks
==29932==         suppressed: 0 bytes in 0 blocks
==29932== 
==29932== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
--29932-- 
--29932-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--29932-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==29932== 
==29932== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
