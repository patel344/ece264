==28941== Memcheck, a memory error detector
==28941== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28941== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28941== Command: ./a.out images/corrupt-testcases/09-incomplete-image.ee264 student-out-23_-
==28941== Parent PID: 28940
==28941== 
--28941-- 
--28941-- Valgrind options:
--28941--    --tool=memcheck
--28941--    --leak-check=full
--28941--    --verbose
--28941--    --log-file=memcheck-23.log
--28941-- Contents of /proc/version:
--28941--   Linux version 2.6.32-431.23.3.el6.x86_64 (mockbuild@x86-027.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Wed Jul 16 06:12:23 EDT 2014
--28941-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28941-- Page sizes: currently 4096, max supported 4096
--28941-- Valgrind library directory: /usr/lib64/valgrind
--28941-- Reading syms from /tmp/.eu3jWQ/a.out
--28941-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28941--    object doesn't have a dynamic symbol table
--28941-- Reading syms from /lib64/ld-2.12.so
--28941--   Considering /usr/lib/debug/.build-id/3b/fa45bce0e82e1d90d37a0cc8630f97f2003bf5.debug ..
--28941--   .. build-id is valid
--28941-- Scheduler: using generic scheduler lock implementation.
--28941-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28941== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28941-by-patel344-on-ecegrid-thin3.ecn.purdue.edu
==28941== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28941-by-patel344-on-ecegrid-thin3.ecn.purdue.edu
==28941== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28941-by-patel344-on-ecegrid-thin3.ecn.purdue.edu
==28941== 
==28941== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28941== don't want to do, unless you know exactly what you're doing,
==28941== or are doing some strange experiment):
==28941==   /usr/lib64/valgrind/../../bin/vgdb --pid=28941 ...command...
==28941== 
==28941== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28941==   /path/to/gdb ./a.out
==28941== and then give GDB the following command
==28941==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28941
==28941== --pid is optional if only one valgrind process is running
==28941== 
--28941-- REDIR: 0x3968617610 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28941-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28941-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28941-- REDIR: 0x3968617480 (index) redirected to 0x4a07c30 (index)
--28941-- REDIR: 0x3968617500 (strcmp) redirected to 0x4a08570 (strcmp)
--28941-- Reading syms from /lib64/libc-2.12.so
--28941--   Considering /usr/lib/debug/.build-id/73/3ad3a438b5a695f7a63a77413f9b2c8c94e8e6.debug ..
--28941--   .. build-id is valid
--28941-- REDIR: 0x3968a84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28941-- REDIR: 0x3968a86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28941-- REDIR: 0x3968a82c40 (__GI_strrchr) redirected to 0x4a07ab0 (__GI_strrchr)
--28941-- REDIR: 0x3968a7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28941-- REDIR: 0x3968b28420 (__strcmp_sse42) redirected to 0x4a084d0 (strcmp)
--28941-- REDIR: 0x3968a81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28941-- REDIR: 0x3968b336f0 (__strlen_sse42) redirected to 0x4a07f90 (strlen)
--28941-- REDIR: 0x3968a8aaf0 (strchrnul) redirected to 0x4a09fb0 (strchrnul)
--28941-- REDIR: 0x3968a84500 (mempcpy) redirected to 0x4a0a020 (mempcpy)
--28941-- REDIR: 0x3968a7b520 (free) redirected to 0x4a063a9 (free)
--28941-- REDIR: 0x3968a7a640 (malloc) redirected to 0x4a069ac (malloc)
--28941-- REDIR: 0x3968a89670 (memcpy) redirected to 0x4a08b60 (memcpy)
==28941== Invalid read of size 1
==28941==    at 0x400B8C: Image_load (answer07.c:71)
==28941==    by 0x401CB4: main (<stdin>:61)
==28941==  Address 0x4c3b378 is 0 bytes after a block of size 88 alloc'd
==28941==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==28941==    by 0x400B08: Image_load (answer07.c:64)
==28941==    by 0x401CB4: main (<stdin>:61)
==28941== 
==28941== 
==28941== HEAP SUMMARY:
==28941==     in use at exit: 212 bytes in 3 blocks
==28941==   total heap usage: 4 allocs, 1 frees, 780 bytes allocated
==28941== 
==28941== Searching for pointers to 3 not-freed blocks
==28941== Checked 64,792 bytes
==28941== 
==28941== 212 (24 direct, 188 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==28941==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==28941==    by 0x400AA4: Image_load (answer07.c:54)
==28941==    by 0x401CB4: main (<stdin>:61)
==28941== 
==28941== LEAK SUMMARY:
==28941==    definitely lost: 24 bytes in 1 blocks
==28941==    indirectly lost: 188 bytes in 2 blocks
==28941==      possibly lost: 0 bytes in 0 blocks
==28941==    still reachable: 0 bytes in 0 blocks
==28941==         suppressed: 0 bytes in 0 blocks
==28941== 
==28941== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
==28941== 
==28941== 1 errors in context 1 of 2:
==28941== Invalid read of size 1
==28941==    at 0x400B8C: Image_load (answer07.c:71)
==28941==    by 0x401CB4: main (<stdin>:61)
==28941==  Address 0x4c3b378 is 0 bytes after a block of size 88 alloc'd
==28941==    at 0x4A06A2E: malloc (vg_replace_malloc.c:270)
==28941==    by 0x400B08: Image_load (answer07.c:64)
==28941==    by 0x401CB4: main (<stdin>:61)
==28941== 
--28941-- 
--28941-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28941-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28941== 
==28941== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 6 from 6)
